<?php


if (!defined('IN_ECS'))                           //防止非法调用，检测是否存IN_ECS这个常量，不存在的话停止运行脚本，并显示'Hacking attempt'(非法攻击）
{
    die('Hacking attempt');
}

error_reporting(E_ALL);                            //报告所有错误

if (__FILE__ == '')                                //检测当前路径+文件名是否为空，为空终止程序提示致命错误
{
    die('Fatal error code: 0');
}

/* 取得当前ecshop所在的根目录 */
define('ROOT_PATH', str_replace('includes/init.php', '', str_replace('//', '/', __FILE__)));                

if (!file_exists(ROOT_PATH . 'data/install.lock') && !file_exists(ROOT_PATH . 'includes/install.lock')            //检测是否已经安装echshop
    && !defined('NO_CHECK_INSTALL'))
{
    header("Location: ./install/index.php/n");

    exit;
}

/* 初始化设置 */
@ini_set('memory_limit',          '64M');            //ini_set设置php.ini中的设置，memory_limit设定一个脚本所能够申请到的最大内存字节数 
@ini_set('session.cache_expire',  180);                //设置session过期时间180分钟
@ini_set('session.use_trans_sid', 0);                //关闭自动把session id嵌入到web的URL中 
@ini_set('session.use_cookies',   1);                //允许使用cookie在客户端保存会话ID
@ini_set('session.auto_start',    0);                //在客户访问任何页面时都自动初始化会话，0-禁止 
@ini_set('display_errors',        1);                //是否显示错误信息，1为显示错误信息

if (DIRECTORY_SEPARATOR == '//')                    //如果装在windows上（DIRECTORY_SEPARATOR路径分隔符，linux上就是’/’ windows上是’/’） 
{
    @ini_set('include_path', '.;' . ROOT_PATH);        //include目录为当前目录和网站根目录，windows下用';'分隔
}
else
{
    @ini_set('include_path', '.:' . ROOT_PATH);        //include目录为当前目录和网站根目录，linux下用':'分隔
}

require(ROOT_PATH . 'data/config.php');                    //引入系统的基本配置文件（数据库相关）

if (defined('DEBUG_MODE') == false)                    //如果常量DEBUG_MODE没有定义则定义为0，DEBUG_MODE用于设置ecshop的使用模式
{
    define('DEBUG_MODE', 0);
}

if (PHP_VERSION >= '5.1' && !empty($timezone))            //设定用于所有日期时间函数的默认时区
{
    date_default_timezone_set($timezone);                //设置时区
}

//$_SERVER['PHP_SELF']返回当前页面，获取$_SERVER['PHP_SELF']最好用htmlspecialchars过滤一下，存在XSS漏洞
$php_self = isset($_SERVER['PHP_SELF']) ? $_SERVER['PHP_SELF'] : $_SERVER['SCRIPT_NAME'];                
if ('/' == substr($php_self, -1))
{
    $php_self .= 'index.php';                                //如果是"/"结尾，则加上index.php 
}
define('PHP_SELF', $php_self);

require(ROOT_PATH . 'includes/inc_constant.php');            //预定义的常量文件
require(ROOT_PATH . 'includes/cls_ecshop.php');                //ecshop基础类
require(ROOT_PATH . 'includes/cls_error.php');                //ECSHOP 用户级错误处理类
require(ROOT_PATH . 'includes/lib_time.php');                //ECSHOP 时间函数
require(ROOT_PATH . 'includes/lib_base.php');                //ECSHOP 基础函数库
require(ROOT_PATH . 'includes/lib_common.php');                //ECSHOP 公用函数库
require(ROOT_PATH . 'includes/lib_main.php');                //ECSHOP 前台公用函数库
require(ROOT_PATH . 'includes/lib_insert.php');                //ECSHOP 动态内容函数库
require(ROOT_PATH . 'includes/lib_goods.php');                //ECSHOP 商品相关函数库
require(ROOT_PATH . 'includes/lib_article.php');            //ECSHOP 文章及文章分类相关函数库

/* 对用户传入的变量进行转义操作。*/
if (!get_magic_quotes_gpc())
{
    if (!empty($_GET))
    {
        $_GET  = addslashes_deep($_GET);
    }
    if (!empty($_POST))
    {
        $_POST = addslashes_deep($_POST);
    }

    $_COOKIE   = addslashes_deep($_COOKIE);
    $_REQUEST  = addslashes_deep($_REQUEST);
}

/* 创建 ECSHOP 对象 */
$ecs = new ECS($db_name, $prefix);                    //参数说明：$db_name:数据库名 $prefix:表前缀 
define('DATA_DIR', $ecs->data_dir());                //data_dir:数据目录
define('IMAGE_DIR', $ecs->image_dir());                //image_dir:图片目录 

/* 初始化数据库类 */
require(ROOT_PATH . 'includes/cls_mysql.php');
$db = new cls_mysql($db_host, $db_user, $db_pass, $db_name);

/* 设置不允许进行缓存的表 */ 
$db->set_disable_cache_tables(array($ecs->table('sessions'), $ecs->table('sessions_data'), $ecs->table('cart')));
$db_host = $db_user = $db_pass = $db_name = NULL;

/* 创建错误处理对象 */
$err = new ecs_error('message.dwt');

/* 载入系统参数 */
$_CFG = load_config();                        //载入配置信息函数在lib_common.php

/* 载入语言文件 */
require(ROOT_PATH . 'languages/' . $_CFG['lang'] . '/common.php');

if ($_CFG['shop_closed'] == 1)
{
    /* 商店关闭了，输出关闭的消息 */
    header('Content-type: text/html; charset='.EC_CHARSET);

    die('<div style="margin: 150px; text-align: center; font-size: 14px"><p>' . $_LANG['shop_closed'] . '</p><p>' . $_CFG['close_comment'] . '</p></div>');
}

if (is_spider())                    //判断是否为搜索引擎蜘蛛 函数在lib_main.php 
{
    /* 如果是蜘蛛的访问，那么默认为访客方式，并且不记录到日志中 */
    if (!defined('INIT_NO_USERS'))
    {
        define('INIT_NO_USERS', true);
        /* 整合UC后，如果是蜘蛛访问，初始化UC需要的常量 */
        if($_CFG['integrate_code'] == 'ucenter')
        {
             $user = & init_users();
        }
    }
    $_SESSION = array();
    $_SESSION['user_id']     = 0;
    $_SESSION['user_name']   = '';
    $_SESSION['email']       = '';
    $_SESSION['user_rank']   = 0;
    $_SESSION['discount']    = 1.00;
}

if (!defined('INIT_NO_USERS'))                //非搜索引擎蜘蛛，记录session 
{
    /* 初始化session */
    include(ROOT_PATH . 'includes/cls_session.php');

    $sess = new cls_session($db, $ecs->table('sessions'), $ecs->table('sessions_data'));

    define('SESS_ID', $sess->get_session_id());
}

if (!defined('INIT_NO_SMARTY'))                    //如果使用smarty
{
    header('Cache-control: private');
    header('Content-type: text/html; charset='.EC_CHARSET);

    /* 创建 Smarty 对象。*/
    require(ROOT_PATH . 'includes/cls_template.php');
    $smarty = new cls_template;

    $smarty->cache_lifetime = $_CFG['cache_time'];                            //缓存时间 
    $smarty->template_dir   = ROOT_PATH . 'themes/' . $_CFG['template'];        //模板所在
    $smarty->cache_dir      = ROOT_PATH . 'temp/caches';                        //缓存所在
    $smarty->compile_dir    = ROOT_PATH . 'temp/compiled';                        //模板编译后的文件所在 

    if ((DEBUG_MODE & 2) == 2)                        //如果常量DEBUG_MODE值为 2、3、6、7 .时 
    {
        $smarty->direct_output = true;                //不使用缓存直接输出 
        $smarty->force_compile = true;                //强行编译
    }
    else
    {
        $smarty->direct_output = false;
        $smarty->force_compile = false;
    }

    $smarty->assign('lang', $_LANG);
    $smarty->assign('ecs_charset', EC_CHARSET);
    if (!empty($_CFG['stylename']))                        //有自定义的样式文件的话就用自定义的样式文件
    {
        $smarty->assign('ecs_css_path', 'themes/' . $_CFG['template'] . '/style_' . $_CFG['stylename'] . '.css');
    }
    else
    {
        $smarty->assign('ecs_css_path', 'themes/' . $_CFG['template'] . '/style.css');
    }

}

if (!defined('INIT_NO_USERS'))                    //非搜索引擎爬虫，记录用户信息
{
    /* 会员信息 */
    $user =& init_users();                        // 会员信息 初始化会员数据 lib_common.php 

    if (!isset($_SESSION['user_id']))
    {
        /* 获取投放站点的名称 */
        $site_name = isset($_GET['from'])   ? $_GET['from'] : addslashes($_LANG['self_site']);
        $from_ad   = !empty($_GET['ad_id']) ? intval($_GET['ad_id']) : 0;

        $_SESSION['from_ad'] = $from_ad; // 用户点击的广告ID
        $_SESSION['referer'] = stripslashes($site_name); // 用户来源

        unset($site_name);

        if (!defined('INGORE_VISIT_STATS'))
        {
            visit_stats();
        }
    }

    if (empty($_SESSION['user_id']))
    {
        if ($user->get_cookie())
        {
            /* 如果会员已经登录并且还没有获得会员的帐户余额、积分以及优惠券 */
            if ($_SESSION['user_id'] > 0)
            {
                update_user_info();
            }
        }
        else
        {
            $_SESSION['user_id']     = 0;
            $_SESSION['user_name']   = '';
            $_SESSION['email']       = '';
            $_SESSION['user_rank']   = 0;
            $_SESSION['discount']    = 1.00;
            if (!isset($_SESSION['login_fail']))
            {
                $_SESSION['login_fail'] = 0;
            }
        }
    }

    /* 设置推荐会员 */
    if (isset($_GET['u']))
    {
        set_affiliate();
    }

    /* session 不存在，检查cookie */
    if (!empty($_COOKIE['ECS']['user_id']) && !empty($_COOKIE['ECS']['password']))
    {
        // 找到了cookie, 验证cookie信息
        $sql = 'SELECT user_id, user_name, password ' .
                ' FROM ' .$ecs->table('users') .
                " WHERE user_id = '" . intval($_COOKIE['ECS']['user_id']) . "' AND password = '" .$_COOKIE['ECS']['password']. "'";

        $row = $db->GetRow($sql);

        if (!$row)
        {
            // 没有找到这个记录
           $time = time() - 3600;
           setcookie("ECS[user_id]",  '', $time, '/');
           setcookie("ECS[password]", '', $time, '/');
        }
        else
        {
            $_SESSION['user_id'] = $row['user_id'];
            $_SESSION['user_name'] = $row['user_name'];
            update_user_info();
        }
    }

    if (isset($smarty))
    {
        $smarty->assign('ecs_session', $_SESSION);
    }
}

if ((DEBUG_MODE & 1) == 1)                    //如果常量DEBUG_MODE值为 1、3、5、7 .时 
{
    error_reporting(E_ALL);                    //报告全部错误
}
else
{
    error_reporting(E_ALL ^ E_NOTICE);        //报告除E_NOTICE以外的所有错误 
}
if ((DEBUG_MODE & 4) == 4)                    //如果常量DEBUG_MODE值为 4、5、6、7 .时，调试程序
{
    include(ROOT_PATH . 'includes/lib.debug.php');                //引人debug文件
}

/* 判断是否支持 Gzip 模式 如果使用SMARTY同时设置了网页压缩，则启用压缩*/
if (!defined('INIT_NO_SMARTY') && gzip_enabled())
{
    ob_start('ob_gzhandler');        //压缩后放入缓冲区
}
else
{
    ob_start();                //打开缓冲区，把下面要显示的内容先缓在服务器
}

?>